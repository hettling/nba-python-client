# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class Reference(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'title_citation': 'str',
        'citation_detail': 'str',
        'uri': 'str',
        'author': 'Person',
        'publication_date': 'datetime'
    }

    attribute_map = {
        'title_citation': 'titleCitation',
        'citation_detail': 'citationDetail',
        'uri': 'uri',
        'author': 'author',
        'publication_date': 'publicationDate'
    }

    def __init__(self, title_citation=None, citation_detail=None, uri=None, author=None, publication_date=None):
        """
        Reference - a model defined in Swagger
        """

        self._title_citation = None
        self._citation_detail = None
        self._uri = None
        self._author = None
        self._publication_date = None
        self.discriminator = None

        if title_citation is not None:
          self.title_citation = title_citation
        if citation_detail is not None:
          self.citation_detail = citation_detail
        if uri is not None:
          self.uri = uri
        if author is not None:
          self.author = author
        if publication_date is not None:
          self.publication_date = publication_date

    @property
    def title_citation(self):
        """
        Gets the title_citation of this Reference.

        :return: The title_citation of this Reference.
        :rtype: str
        """
        return self._title_citation

    @title_citation.setter
    def title_citation(self, title_citation):
        """
        Sets the title_citation of this Reference.

        :param title_citation: The title_citation of this Reference.
        :type: str
        """

        self._title_citation = title_citation

    @property
    def citation_detail(self):
        """
        Gets the citation_detail of this Reference.

        :return: The citation_detail of this Reference.
        :rtype: str
        """
        return self._citation_detail

    @citation_detail.setter
    def citation_detail(self, citation_detail):
        """
        Sets the citation_detail of this Reference.

        :param citation_detail: The citation_detail of this Reference.
        :type: str
        """

        self._citation_detail = citation_detail

    @property
    def uri(self):
        """
        Gets the uri of this Reference.

        :return: The uri of this Reference.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """
        Sets the uri of this Reference.

        :param uri: The uri of this Reference.
        :type: str
        """

        self._uri = uri

    @property
    def author(self):
        """
        Gets the author of this Reference.

        :return: The author of this Reference.
        :rtype: Person
        """
        return self._author

    @author.setter
    def author(self, author):
        """
        Sets the author of this Reference.

        :param author: The author of this Reference.
        :type: Person
        """

        self._author = author

    @property
    def publication_date(self):
        """
        Gets the publication_date of this Reference.

        :return: The publication_date of this Reference.
        :rtype: datetime
        """
        return self._publication_date

    @publication_date.setter
    def publication_date(self, publication_date):
        """
        Sets the publication_date of this Reference.

        :param publication_date: The publication_date of this Reference.
        :type: datetime
        """

        self._publication_date = publication_date

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, Reference):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
