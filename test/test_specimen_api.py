# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: v2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.specimen_api import SpecimenApi


class TestSpecimenApi(unittest.TestCase):
    """ SpecimenApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.specimen_api.SpecimenApi()

    def tearDown(self):
        pass

    def test_count_get(self):
        """
        Test case for count_get

        Get the number of specimens matching a condition
        """
        pass

    def test_count_postjson(self):
        """
        Test case for count_postjson

        Get the number of specimens matching a condition
        """
        pass

    def test_dwca_get_data_set(self):
        """
        Test case for dwca_get_data_set

        Download dataset as Darwin Core Archive File
        """
        pass

    def test_dwca_get_data_set_names(self):
        """
        Test case for dwca_get_data_set_names

        Retrieve the names of all available datasets
        """
        pass

    def test_dwca_query(self):
        """
        Test case for dwca_query

        Dynamic download service: Query for specimens and return result as Darwin Core Archive File
        """
        pass

    def test_exists(self):
        """
        Test case for exists

        Returns whether or not a unitID for a specimen exists
        """
        pass

    def test_find(self):
        """
        Test case for find

        Find a specimen by id
        """
        pass

    def test_find_by_ids(self):
        """
        Test case for find_by_ids

        Find specimens by ids
        """
        pass

    def test_find_by_unit_id(self):
        """
        Test case for find_by_unit_id

        Find a specimen by unitID
        """
        pass

    def test_get_distinct_values(self):
        """
        Test case for get_distinct_values

        Get all different values that can be found for one field
        """
        pass

    def test_get_field_info(self):
        """
        Test case for get_field_info

        
        """
        pass

    def test_get_ids_in_collection(self):
        """
        Test case for get_ids_in_collection

        Retrieve all ids within a 'special collection' of specimens
        """
        pass

    def test_get_named_collections(self):
        """
        Test case for get_named_collections

        Retrieve the names of all 'special collections' of specimens
        """
        pass

    def test_get_paths(self):
        """
        Test case for get_paths

        
        """
        pass

    def test_get_settings(self):
        """
        Test case for get_settings

        
        """
        pass

    def test_get_settings_0(self):
        """
        Test case for get_settings_0

        
        """
        pass

    def test_group_by_scientific_name_get(self):
        """
        Test case for group_by_scientific_name_get

        Aggregates Taxon and Specimen documents according to their scientific names
        """
        pass

    def test_is_operator_allowed(self):
        """
        Test case for is_operator_allowed

        
        """
        pass

    def test_query_get(self):
        """
        Test case for query_get

        Query for specimens
        """
        pass

    def test_query_postjson(self):
        """
        Test case for query_postjson

        Query for specimens
        """
        pass


if __name__ == '__main__':
    unittest.main()
